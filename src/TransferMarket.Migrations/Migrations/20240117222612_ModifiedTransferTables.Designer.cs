// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TransferMarket.Data;

namespace TransferMarket.Migrations.Migrations
{
    [DbContext(typeof(TransferMarketContext))]
    [Migration("20240117222612_ModifiedTransferTables")]
    partial class ModifiedTransferTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TransferMarket.Data.Models.ApplicationVersions.ApplicationVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ApplicationVersions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Create Skeleton",
                            Version = "1.0.1"
                        });
                });

            modelBuilder.Entity("TransferMarket.Data.Models.Footballers.Footballer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Wage")
                        .HasColumnType("float");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Footballers");
                });

            modelBuilder.Entity("TransferMarket.Data.Models.Footballers.FootballerHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FoorballerId")
                        .HasColumnType("int");

                    b.Property<double>("NewHeight")
                        .HasColumnType("float");

                    b.Property<string>("NewName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NewWage")
                        .HasColumnType("float");

                    b.Property<double>("NewWeight")
                        .HasColumnType("float");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FoorballerId")
                        .IsUnique();

                    b.ToTable("FootballerHistories");
                });

            modelBuilder.Entity("TransferMarket.Data.Models.Teams.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("League")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("TotalValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("TransferMarket.Data.Models.Teams.TeamHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("NewBudget")
                        .HasColumnType("float");

                    b.Property<string>("NewCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewLeague")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NewTotalValue")
                        .HasColumnType("float");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TeamId")
                        .IsUnique();

                    b.ToTable("TeamsHistories");
                });

            modelBuilder.Entity("TransferMarket.Data.Models.Transfers.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FootballerId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<double>("TotalSum")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FootballerId")
                        .IsUnique();

                    b.HasIndex("TeamId")
                        .IsUnique();

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("TransferMarket.Data.Models.Transfers.TransferHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NewTotalSum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransferId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TransferId")
                        .IsUnique();

                    b.ToTable("TransferHistories");
                });

            modelBuilder.Entity("TransferMarket.Data.Models.Footballers.FootballerHistory", b =>
                {
                    b.HasOne("TransferMarket.Data.Models.Footballers.Footballer", "Footballer")
                        .WithOne("FootballerHistory")
                        .HasForeignKey("TransferMarket.Data.Models.Footballers.FootballerHistory", "FoorballerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Footballer");
                });

            modelBuilder.Entity("TransferMarket.Data.Models.Teams.TeamHistory", b =>
                {
                    b.HasOne("TransferMarket.Data.Models.Teams.Team", "Team")
                        .WithOne("TeamHistory")
                        .HasForeignKey("TransferMarket.Data.Models.Teams.TeamHistory", "TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("TransferMarket.Data.Models.Transfers.Transfer", b =>
                {
                    b.HasOne("TransferMarket.Data.Models.Footballers.Footballer", "Footballer")
                        .WithOne("Transfer")
                        .HasForeignKey("TransferMarket.Data.Models.Transfers.Transfer", "FootballerId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("TransferMarket.Data.Models.Teams.Team", "Team")
                        .WithOne("Transfer")
                        .HasForeignKey("TransferMarket.Data.Models.Transfers.Transfer", "TeamId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Footballer");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("TransferMarket.Data.Models.Transfers.TransferHistory", b =>
                {
                    b.HasOne("TransferMarket.Data.Models.Transfers.Transfer", "Transfer")
                        .WithOne("TransferHistory")
                        .HasForeignKey("TransferMarket.Data.Models.Transfers.TransferHistory", "TransferId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Transfer");
                });

            modelBuilder.Entity("TransferMarket.Data.Models.Footballers.Footballer", b =>
                {
                    b.Navigation("FootballerHistory");

                    b.Navigation("Transfer");
                });

            modelBuilder.Entity("TransferMarket.Data.Models.Teams.Team", b =>
                {
                    b.Navigation("TeamHistory");

                    b.Navigation("Transfer");
                });

            modelBuilder.Entity("TransferMarket.Data.Models.Transfers.Transfer", b =>
                {
                    b.Navigation("TransferHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
